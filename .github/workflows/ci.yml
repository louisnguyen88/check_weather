name: CI Pipeline

on:
  push:
    branches:
      - "master"
      - "feature/**"

env:
  AWS_REGION: ap-southeast-2
  ECR_REPOSITORY: check_weather
  IMAGE_TAG: ${{ github.sha }}
  AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
      # Step 1: Check out code
      - name: Checkout code
        uses: actions/checkout@v4

      # Step 2: Set up Java environment
      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      # Step 3: Grant execute permissions to Gradle wrapper
      - name: Grant Gradle wrapper permissions
        run: chmod +x ./gradlew

      # Step 4: Build the application
      - name: Build application with Gradle
        run: ./gradlew clean build --stacktrace --info

      # Step 5: Debug build output
      - name: Verify build artifacts
        run: |
          echo "Listing build/libs contents:"
          ls -l build/libs/
          echo "Checking for main JAR file:"
          if [ -f build/libs/check_weather_app-0.0.1-SNAPSHOT.jar ]; then
            echo "Main JAR file exists."
          else
            echo "Main JAR file is missing!" >&2
            exit 1
          fi

      # Step 6: Configure AWS credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ env.AWS_REGION }}
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_ACCESS_KEY }}

      # Step 7: Login to Amazon ECR
      - name: Login to Amazon ECR
        run: |
          aws ecr get-login-password --region ${{ env.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com

      # Step 8: Build and push Docker image
      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: |
            ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ env.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }}
            ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ env.ECR_REPOSITORY }}:latest
          file: ./Dockerfile
          build-args: |
            --progress=plain

  updateIACrepo:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      # Step 1: Install SSH key
      - name: Install SSH key
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      # Step 2: Add known hosts
      - name: Add known hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan github.com >> ~/.ssh/known_hosts

      # Step 3: Check out IAC repo
      - name: Checkout IAC repo
        uses: actions/checkout@v3
        with:
          repository: 'louisnguyen88/iac_checkweather'
          ref: master
          ssh-key: ${{ secrets.SSH_PRIVATE_KEY }}

      # Step 4: Modify the image in IAC repo
      - name: Modify deployment image
        run: |
          git config user.email louisnguyen252@gmail.com
          git config user.name louisnguyen88
          sed -i "s|image:.*|image: ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ env.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }}|g" k8s/deployment.yaml
          git add k8s/deployment.yaml
          git commit -m 'Updated image via GitHub Actions: Job changemanifest: ${{ github.run_number }}'
          git push origin master
